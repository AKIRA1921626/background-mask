-- script:luaJIT
-- label:クリッピング

--track@x:X,-5000,5000,0,1
--track@y:Y,-5000,5000,0,1
--track@rotate:回転,-3600,3600,0,1
--track@size:サイズ,0,4000,100,1
--track@aspect:縦横比,-100,100,0,0.1
--track@blur:ぼかし,0,100,0,1
--select@fig_0:マスクの種類=1,背景=0,円=1,四角形=2,三角形=3,五角形=4,六角形=5,星型=6,ハート=7
--color@col:背景色,0xffffff
--check@reverse:マスクの反転,0
--check@match_size:元のサイズに合わせる,0

-- cacheに最初に保持してるイメージを保存
obj.copybuffer("cache:img","obj")

-- 最初に保持しているイメージの縦と横を変数に代入
local w,h = obj.getpixel()

-- 仮想バッファを作成、w,hで新規作成
obj.setoption("drawtarget","tempbuffer",w*2,h*2)

-- 図形を読み込み、形はなんでもいいので、"四角形"で固定、色はトラックバーcolで指定
obj.load("figure","四角形",col,w*2)

obj.draw() -- 仮想バッファに四角形を描画

-- 最初にcacheに保存した画像をobjに再度読み込み
obj.copybuffer("obj","cache:img")
obj.draw() -- 仮想バッファに描画されている四角形の上に、読み込んだ画像を描画

-- 描画先を仮想バッファからフレームバッファに変更
obj.setoption("drawtarget","framebuffer")

-- 仮想バッファの四角形の上に画像を描画したものを、objに読み込み
obj.load("tempbuffer")

-- ここでfig_1を宣言、ローカル変数のためスコープの問題が発生する可能性を考慮。初期値は"四角形"とする
local fig_1 = "四角形"

-- fig_0の数値を、文字列に変換して、fig_1に代入。for分に変更できそう。
if(fig_0 == 0) then
    fig_1 = "背景"
elseif(fig_0 == 1) then
    fig_1 = "円"
elseif(fig_0 == 2) then
    fig_1 = "四角形"
elseif(fig_0 == 3) then
    fig_1 = "三角形"
elseif(fig_0 == 4) then
    fig_1 = "五角形"
elseif(fig_0 == 5) then
    fig_1 = "六角形"
elseif(fig_0 == 6) then
    fig_1 = "星型"
elseif(fig_0 == 7) then
    fig_1 = "ハート"
end

-- マスクeffectをかける
obj.effect("マスク","X",x,"Y",y,"回転",rotate,"サイズ",size,"縦横比",aspect,"ぼかし",blur,"マスクの種類",fig_1,"マスクの反転",reverse,"元のサイズに合わせる",match_size)